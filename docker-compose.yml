version: "3.8"
services:
  api-gateway:
    image: traefik:v2.10
    ports:
      - "${APP_PORT}:8080"
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
    networks:
      - austeris-network

  asset-service:
    build:
      context: .
      dockerfile: asset-service/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}?currentSchema=assets
      - REDIS_URL=${REDIS_URL}
      - APP_PORT=${ASSET_SERVICE_PORT}
    depends_on:
      - postgres
      - redis
    networks:
      - austeris-network

  wallet-service:
    build:
      context: .
      dockerfile: wallet-service/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}?currentSchema=wallets
      - REDIS_URL=${REDIS_URL}
      - APP_PORT=${WALLET_SERVICE_PORT}
    depends_on:
      - postgres
      - redis
    networks:
      - austeris-network

  transaction-service:
    build:
      context: .
      dockerfile: transaction-service/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}?currentSchema=transactions
      - REDIS_URL=${REDIS_URL}
      - APP_PORT=${TRANSACTION_SERVICE_PORT}
    depends_on:
      - postgres
      - redis
    networks:
      - austeris-network

  snapshot-service:
    build:
      context: .
      dockerfile: snapshot-service/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}?currentSchema=snapshots
      - REDIS_URL=${REDIS_URL}
      - APP_PORT=${SNAPSHOT_SERVICE_PORT}
    depends_on:
      - postgres
      - redis
    networks:
      - austeris-network

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}?currentSchema=users
      - REDIS_URL=${REDIS_URL}
      - APP_PORT=${USER_SERVICE_PORT}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
      - redis
    networks:
      - austeris-network

  postgres:
    image: postgres:17.5-alpine
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - austeris-network
    restart: unless-stopped

  redis:
    image: redis:8-alpine
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - austeris-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    networks:
      - austeris-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  austeris-network:
    driver: bridge
